class SnakeGrid {

    field SnakeGame game;
    field int horizontal, vertical;
    field int foodX, foodY;
    field Array grid;

    constructor SnakeGrid new(SnakeGame theGame, int initX, int initY) {
        let game = theGame;
        let horizontal = initX / 4;
        let vertical = initY / 4;
        do init();
        return this;
    }
	
	method void init() {
        var int curX, curY;
        var Array xGrid;
        let grid = Array.new(horizontal);
        let curX = 0;
        while(curX < horizontal) {
            let xGrid = Array.new(vertical);
            let curY = 0;
            while(curY < vertical) {
                let xGrid[curY] = false;
                let curY = curY + 1;
            }
            let grid[curX] = xGrid;
            let curX = curX + 1;
        }
        return;
    }
	
	method int getHorizontal() {
        return horizontal;
    }
	
    method int getVertical() {
        return vertical;
    }
	
    method int foodX() {
        return foodX;
    }
	
    method int foodY() {
        return foodY;
    }
	

    method void dispose() {

        var int curX;
        var Array xGrid;

        let curX = 0;
        while(curX < horizontal) {
            let xGrid = grid[curX];
            do xGrid.dispose();
            let curX = curX + 1;
        }
        do Memory.deAlloc(this);

        return;

    }

    method void placeFood() {

        var boolean found;
        var int randX, randY;

        let found = false;
        while(~found) {
            let randX = Random.randRange(horizontal);
            let randY = Random.randRange(vertical);
            if(~checkOccupied(randX, randY) ) {
                let found = true;
            }

        }
        let foodX = randX;
        let foodY = randY;
        return;
    }

    method void drawFood() {

        do Screen.setColor(true);
        do Screen.drawCircle((foodX * 4) + 2, (foodY * 4) + 2, 2);

        return;
    }

    method void setOccupied(int x, int y, boolean occupied) {
        var Array xGrid;
        let xGrid = grid[x];
        let xGrid[y] = occupied;
        return;
    }
    method boolean checkOccupied(int x, int y) {
        var Array xGrid;
        let xGrid = grid[x];
        if(xGrid[y]) {
            return true;
        } else {
            return false;
        }
    }
    method boolean checkFood(int x, int y) {

        if(x = foodX) {
            if(y = foodY) {
                return true;
            }
        }

        return false;

    }

    method void drawSnakeBit(int x, int y) {
        do Screen.setColor(true);
        do Screen.drawRectangle(x * 4, y * 4, (x * 4) + 4, (y * 4) + 4);
        do setOccupied(x, y, true);
        return;
    }

    method void clearSnakeBit(int x, int y) {
        do Screen.setColor(false);
        do Screen.drawRectangle(x * 4, y * 4, (x * 4) + 4, (y * 4) + 4);
        do setOccupied(x, y, false);
        return;
    }

}
